# Generated by Django 3.0 on 2020-04-11 03:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Joined date')),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='Last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_email_confirmed', models.BooleanField(default=False)),
                ('firstName', models.CharField(default='', max_length=40)),
                ('lastName', models.CharField(default='', max_length=40)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'candidate'), (2, 'employer'), (3, 'admin'), (4, 'super')])),
                ('protect_file_temp_download_key', models.CharField(default='', max_length=40)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PreferredName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferredName', models.CharField(default='', max_length=40)),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('English', 'English'), ('French', 'French'), ('Other', 'Other (Please specify below)')], default='', max_length=40)),
                ('fluency', models.CharField(choices=[(0, 'Elementary Proficiency'), (35, 'Limited Working Proficiency'), (60, 'Professional Working Proficiency'), (80, 'Full Working Proficiency'), (100, 'Native or Bilingual Proficiency')], default='', max_length=40)),
                ('details', models.CharField(default='', max_length=40)),
                ('user', models.ForeignKey(default='', max_length=40, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='companies.Company')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentID', models.CharField(default='', max_length=40)),
                ('creditCompleted', models.FloatField(default=0, max_length=40)),
                ('creditLeft', models.FloatField(default=0, max_length=40)),
                ('gpa', models.FloatField(default=0, max_length=40)),
                ('program', models.CharField(choices=[('ANY', 'Any Category'), ('E_Aero_Mech', 'GCS Engineering - Aerospace & Mechanical'), ('E_Elec', 'GCS Engineering - Electrical'), ('E_Ind', 'GCS Engineering - Industrial'), ('E_QS', 'GCS Engineering - Quality System'), ('E_Soft', 'GCS Engineering and Computer Science - Computer, Information Security & Software'), ('E_Other', 'GCS Engineering - Other'), ('F_A_Design', 'Fine Arts - Computational Arts & Design'), ('J_Acc_Fin', 'JMSB - Accounting & Finance'), ('J_HR_Mar', 'JMSB - HR & Marketing'), ('J_Bus', 'JMSB - Business Administration'), ('J_Man', 'JMSB - Management & Supply Chain Operation Management'), ('J_Other', 'JMSB - Other'), ('A_Acc', 'Arts and Science - Actuarial Mathematics & Finance'), ('A_Econ', 'Arts and Science - Economics'), ('A_Math_Phy', 'Arts and Science - Mathematics & Physics'), ('A_Pol', 'Arts and Science - Political Science'), ('A_BIO_CHEM', 'Arts and Science - Biology & Chemistry'), ('A_Jou', 'Arts and Science - Journalism'), ('A_Tr', 'Arts and Science - Translation'), ('A_Other', 'Arts and Science - Other')], default='ANY', max_length=20)),
                ('internationalStudent', models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], default='No', max_length=3)),
                ('travel', models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], default='No', max_length=3)),
                ('timeCommitment', models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], default='No', max_length=3)),
                ('transcript', models.FileField(default='', upload_to='candidate/transcript/')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
